// Generated by CoffeeScript 1.6.2
var Client, Router, logger, util;

util = require('util');

Client = require('request-json').JsonClient;

logger = require('printit')({
  date: false,
  prefix: 'lib:router'
});

Router = (function() {
  Router.prototype.routes = {};

  function Router() {
    var homePort;

    homePort = process.env.DEFAULT_REDIRECT_PORT;
    this.client = new Client("http://localhost:" + homePort + "/");
  }

  Router.prototype.getRoutes = function() {
    return this.routes;
  };

  Router.prototype.displayRoutes = function(callback) {
    var route, slug, _ref;

    _ref = this.routes;
    for (slug in _ref) {
      route = _ref[slug];
      logger.info("" + slug + " (" + route.state + ") on port " + route.port);
    }
    if (callback != null) {
      return callback();
    }
  };

  Router.prototype.reset = function(callback) {
    var _this = this;

    logger.info('Start resetting routes...');
    this.routes = {};
    return this.client.get("api/applications/", function(error, res, apps) {
      var app, err, _i, _len, _ref;

      if ((error != null) || (apps.error != null)) {
        logger.error("Cannot retrieve applications list.");
        logger.error(util.inspect(error) || apps.msg);
        return callback(error || apps.msg);
      }
      try {
        _ref = apps.rows;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          app = _ref[_i];
          _this.routes[app.slug] = {};
          if (app.port != null) {
            _this.routes[app.slug].port = app.port;
          }
          if (app.state != null) {
            _this.routes[app.slug].state = app.state;
          }
        }
        logger.info("Routes have been successfully reset.");
        return callback();
      } catch (_error) {
        err = _error;
        logger.error("Oops, something went wrong during routes reset.");
        return callback(err);
      }
    });
  };

  return Router;

})();

module.exports = new Router();
